version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file: .env
    depends_on:
      - evolution-api
    restart: unless-stopped
    networks:
      - app_network

  evolution-api:
    image: atendai/evolution-api:latest
    container_name: evolution_api
    restart: unless-stopped
    ports:
      - "8088:8080"
    env_file:
      - .en
    volumes:
      - evolution_instancesv2:/evolution/instances
    depends_on:
      - postgresql-evo
      - redis
    networks:
      - app_network
    environment:
      - CONFIG_SESSION_PHONE_VERSION=2.3000.1025212177
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_REDIS_ENABLED=true
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  postgresql-evo:
    image: postgres:14-alpine
    container_name: evolution_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER_EVO}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_EVO}
      POSTGRES_DB: ${POSTGRES_DB_EVO}
    volumes:
      - postgres_evo_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    command:
      [
        "redis-server",
        "--appendonly",
        "yes",
        "--port",
        "6379",
        "--requirepass",
        "${REDIS_PASSWORD}",
      ]
    volumes:
      - redis_data:/data
    networks:
      - app_network

volumes:
  evolution_instancesv2:
    external: true
    name: evolution_instancesv2
  redis_data:
    external: true
    name: redis_data
  postgres_evo_data:

networks:
  app_network:
    driver: bridge
